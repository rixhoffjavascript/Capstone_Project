# Nginx configuration for React frontend with client-side routing

worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Enable compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_min_length 1000;
    gzip_comp_level 6;
    gzip_vary on;

    # Rate limiting zone
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;

    server {
        listen 80;
        server_name flooring-crm-frontend.onrender.com;
        
        # Root directory for static files
        root /usr/share/nginx/html;
        index index.html;
        
        # Security headers for all locations
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;

        # Health check endpoints (no root needed, direct return)
        location = /health {
            access_log off;
            add_header Content-Type text/plain always;
            add_header Cache-Control "no-cache" always;
            return 200 'healthy\n';
        }

        location = /healthz {
            access_log off;
            add_header Content-Type text/plain always;
            add_header Cache-Control "no-cache" always;
            return 200 'healthy\n';
        }

        # Primary location block for SPA
        location / {
            try_files $uri $uri/ /index.html;
            add_header Cache-Control "no-store, must-revalidate";
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-Frame-Options "DENY" always;
            add_header X-XSS-Protection "1; mode=block" always;
            expires 0;
        }

        # Serve static files
        location /assets {
            alias /usr/share/nginx/html/assets;
            expires 1y;
            add_header Cache-Control "public, immutable";
            try_files $uri =404;
        }

        # Explicitly handle index.html
        location = /index.html {
            expires -1;
            add_header Cache-Control "no-store, must-revalidate";
        }

        # Handle static files
        location ~* \.(?:manifest|appcache|html?|xml|json)$ {
            root /usr/share/nginx/html;
            expires -1;
            add_header Cache-Control "no-store, must-revalidate";
        }

        location ~* \.(?:css|js)$ {
            root /usr/share/nginx/html;
            try_files $uri =404;
            expires 1y;
            access_log off;
            add_header Cache-Control "public";
        }

        location ~ ^.+\..+$ {
            root /usr/share/nginx/html;
            try_files $uri =404;
        }

        # Serve static files with aggressive caching
        location /assets/ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            try_files $uri =404;
            access_log off;
        }

        # Handle API requests with rate limiting
        location /api/ {
            limit_req zone=api_limit burst=20 nodelay;
            proxy_pass https://app-zyqywrfy.fly.dev;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 60s;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
        }

        # Handle 404 errors
        error_page 404 /index.html;

        # Deny access to hidden files and directories
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Additional security measures
        location = /robots.txt {
            add_header Content-Type text/plain;
            return 200 "User-agent: *\nDisallow: /api/\n";
        }

        # Disable access to sensitive files
        location ~ \.(htaccess|htpasswd|git|env|config|lock)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
}
